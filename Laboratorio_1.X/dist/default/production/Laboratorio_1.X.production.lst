

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 28 21:25:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	strings
   203  0003                     __pstrings:	
   204  0003                     stringtab:	
   205  0003                     __stringtab:	
   206  0003                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209  0003                     stringdir:	
   210  0003  3000               	movlw	high stringdir
   211  0004  008A               	movwf	10
   212  0005  0804               	movf	4,w
   213  0006  0A84               	incf	4,f
   214  0007  0782               	addwf	2,f
   215  0008                     __stringbase:	
   216  0008  3400               	retlw	0
   217  0009                     __end_of__stringtab:	
   218  0009                     _SEGMENT_MAP:	
   219  0009  343F               	retlw	63
   220  000A  3406               	retlw	6
   221  000B  345B               	retlw	91
   222  000C  344F               	retlw	79
   223  000D  3466               	retlw	102
   224  000E  346D               	retlw	109
   225  000F  347D               	retlw	125
   226  0010  3407               	retlw	7
   227  0011  347F               	retlw	127
   228  0012  346F               	retlw	111
   229  0013                     __end_of_SEGMENT_MAP:	
   230  0013                     _COUNTER_MAP:	
   231  0013  3400               	retlw	0
   232  0014  3401               	retlw	1
   233  0015  3403               	retlw	3
   234  0016  3407               	retlw	7
   235  0017  340F               	retlw	15
   236  0018  341F               	retlw	31
   237  0019  343F               	retlw	63
   238  001A  347F               	retlw	127
   239  001B  34FF               	retlw	255
   240  001C                     __end_of_COUNTER_MAP:	
   241  0008                     _PORTDbits	set	8
   242  0008                     _PORTD	set	8
   243  0007                     _PORTC	set	7
   244  0006                     _PORTB	set	6
   245  0005                     _PORTA	set	5
   246  0088                     _TRISDbits	set	136
   247  0088                     _TRISD	set	136
   248  0087                     _TRISC	set	135
   249  0086                     _TRISB	set	134
   250  0085                     _TRISA	set	133
   251                           
   252                           ; #config settings
   253  0000                     
   254                           	psect	cinit
   255  07F7                     start_initialization:	
   256  07F7                     __initialization:	
   257                           
   258                           ; Clear objects allocated to COMMON
   259  07F7  01F0               	clrf	__pbssCOMMON& (0+127)
   260  07F8  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   261  07F9  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   262  07FA  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   263  07FB  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   264  07FC                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  07FC                     __end_of__initialization:	
   268  07FC  0183               	clrf	3
   269  07FD  120A  118A  2F1C   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMMON
   272  0070                     __pbssCOMMON:	
   273  0070                     _anti2:	
   274  0070                     	ds	1
   275  0071                     _anti1:	
   276  0071                     	ds	1
   277  0072                     _player2:	
   278  0072                     	ds	1
   279  0073                     _player1:	
   280  0073                     	ds	1
   281  0074                     _bandera:	
   282  0074                     	ds	1
   283                           
   284                           	psect	cstackCOMMON
   285  0075                     __pcstackCOMMON:	
   286  0075                     ?_main:	
   287  0075                     ??_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290                           
   291                           ; 1 bytes @ 0x0
   292  0075                     	ds	3
   293                           
   294                           	psect	maintext
   295  071C                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 40 in file "Carreras.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          3       0       0       0       0
   318 ;;      Totals:         3       0       0       0       0
   319 ;;Total ram usage:        3 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  071C                     _main:	
   331  071C                     l744:	
   332                           ;incstack = 0
   333                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   334                           
   335                           
   336                           ;Carreras.c: 41:     TRISA = 0;
   337  071C  1683               	bsf	3,5	;RP0=1, select bank1
   338  071D  1303               	bcf	3,6	;RP1=0, select bank1
   339  071E  0185               	clrf	5	;volatile
   340                           
   341                           ;Carreras.c: 42:     TRISB = 0;
   342  071F  0186               	clrf	6	;volatile
   343                           
   344                           ;Carreras.c: 43:     TRISC = 0;
   345  0720  0187               	clrf	7	;volatile
   346                           
   347                           ;Carreras.c: 44:     TRISD = 0;
   348  0721  0188               	clrf	8	;volatile
   349  0722                     l746:	
   350                           
   351                           ;Carreras.c: 46:     TRISDbits.TRISD5 = 1;
   352  0722  1688               	bsf	8,5	;volatile
   353  0723                     l748:	
   354                           
   355                           ;Carreras.c: 47:     TRISDbits.TRISD6 = 1;
   356  0723  1708               	bsf	8,6	;volatile
   357  0724                     l750:	
   358                           
   359                           ;Carreras.c: 48:     TRISDbits.TRISD7 = 1;
   360  0724  1788               	bsf	8,7	;volatile
   361                           
   362                           ;Carreras.c: 50:     PORTA = 0;
   363  0725  1283               	bcf	3,5	;RP0=0, select bank0
   364  0726  1303               	bcf	3,6	;RP1=0, select bank0
   365  0727  0185               	clrf	5	;volatile
   366                           
   367                           ;Carreras.c: 51:     PORTB = 0;
   368  0728  0186               	clrf	6	;volatile
   369                           
   370                           ;Carreras.c: 52:     PORTC = 0;
   371  0729  0187               	clrf	7	;volatile
   372                           
   373                           ;Carreras.c: 53:     PORTD = 0;
   374  072A  0188               	clrf	8	;volatile
   375  072B                     l752:	
   376                           
   377                           ;Carreras.c: 56:         if (PORTDbits.RD5 == 1) {
   378  072B  1E88               	btfss	8,5	;volatile
   379  072C  2F2E               	goto	u111
   380  072D  2F2F               	goto	u110
   381  072E                     u111:	
   382  072E  2FEE               	goto	l840
   383  072F                     u110:	
   384  072F                     l754:	
   385                           
   386                           ;Carreras.c: 58:             bandera = 0;
   387  072F  01F4               	clrf	_bandera
   388                           
   389                           ;Carreras.c: 59:             player1 = 0;
   390  0730  01F3               	clrf	_player1
   391                           
   392                           ;Carreras.c: 60:             player2 = 0;
   393  0731  01F2               	clrf	_player2
   394                           
   395                           ;Carreras.c: 61:             anti1 = 0;
   396  0732  01F1               	clrf	_anti1
   397                           
   398                           ;Carreras.c: 62:             anti2 = 0;
   399  0733  01F0               	clrf	_anti2
   400                           
   401                           ;Carreras.c: 63:             PORTA = 0;
   402  0734  0185               	clrf	5	;volatile
   403                           
   404                           ;Carreras.c: 64:             PORTB = 0;
   405  0735  0186               	clrf	6	;volatile
   406  0736                     l756:	
   407                           
   408                           ;Carreras.c: 65:             PORTDbits.RD3 = 0;
   409  0736  1188               	bcf	8,3	;volatile
   410  0737                     l758:	
   411                           
   412                           ;Carreras.c: 66:             PORTDbits.RD4 = 0;
   413  0737  1208               	bcf	8,4	;volatile
   414  0738                     l760:	
   415                           
   416                           ;Carreras.c: 68:             PORTDbits.RD0 = 1;
   417  0738  1408               	bsf	8,0	;volatile
   418  0739                     l762:	
   419                           
   420                           ;Carreras.c: 69:             PORTDbits.RD1 = 0;
   421  0739  1088               	bcf	8,1	;volatile
   422  073A                     l764:	
   423                           
   424                           ;Carreras.c: 70:             PORTDbits.RD2 = 0;
   425  073A  1108               	bcf	8,2	;volatile
   426  073B                     l766:	
   427                           
   428                           ;Carreras.c: 71:             PORTC = SEGMENT_MAP [3];
   429  073B  3004               	movlw	low (((_SEGMENT_MAP+3)-__stringbase)| (0+32768))
   430  073C  0084               	movwf	4
   431  073D  120A  118A  2003  120A  118A  	fcall	stringdir
   432  0742  0087               	movwf	7	;volatile
   433  0743                     l768:	
   434                           
   435                           ;Carreras.c: 72:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   436  0743  3006               	movlw	6
   437  0744  00F7               	movwf	??_main+2
   438  0745  3013               	movlw	19
   439  0746  00F6               	movwf	??_main+1
   440  0747  30AD               	movlw	173
   441  0748  00F5               	movwf	??_main
   442  0749                     u217:	
   443  0749  0BF5               	decfsz	??_main,f
   444  074A  2F49               	goto	u217
   445  074B  0BF6               	decfsz	??_main+1,f
   446  074C  2F49               	goto	u217
   447  074D  0BF7               	decfsz	??_main+2,f
   448  074E  2F49               	goto	u217
   449  074F  2F50               	nop2
   450  0750                     l770:	
   451                           
   452                           ;Carreras.c: 74:             PORTDbits.RD0 = 0;
   453  0750  1283               	bcf	3,5	;RP0=0, select bank0
   454  0751  1303               	bcf	3,6	;RP1=0, select bank0
   455  0752  1008               	bcf	8,0	;volatile
   456  0753                     l772:	
   457                           
   458                           ;Carreras.c: 75:             PORTDbits.RD1 = 1;
   459  0753  1488               	bsf	8,1	;volatile
   460  0754                     l774:	
   461                           
   462                           ;Carreras.c: 76:             PORTDbits.RD2 = 0;
   463  0754  1108               	bcf	8,2	;volatile
   464  0755                     l776:	
   465                           
   466                           ;Carreras.c: 77:             PORTC = SEGMENT_MAP [2];
   467  0755  3003               	movlw	low (((_SEGMENT_MAP+2)-__stringbase)| (0+32768))
   468  0756  0084               	movwf	4
   469  0757  120A  118A  2003  120A  118A  	fcall	stringdir
   470  075C  0087               	movwf	7	;volatile
   471  075D                     l778:	
   472                           
   473                           ;Carreras.c: 78:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   474  075D  3006               	movlw	6
   475  075E  00F7               	movwf	??_main+2
   476  075F  3013               	movlw	19
   477  0760  00F6               	movwf	??_main+1
   478  0761  30AD               	movlw	173
   479  0762  00F5               	movwf	??_main
   480  0763                     u227:	
   481  0763  0BF5               	decfsz	??_main,f
   482  0764  2F63               	goto	u227
   483  0765  0BF6               	decfsz	??_main+1,f
   484  0766  2F63               	goto	u227
   485  0767  0BF7               	decfsz	??_main+2,f
   486  0768  2F63               	goto	u227
   487  0769  2F6A               	nop2
   488  076A                     l780:	
   489                           
   490                           ;Carreras.c: 80:             PORTDbits.RD0 = 0;
   491  076A  1283               	bcf	3,5	;RP0=0, select bank0
   492  076B  1303               	bcf	3,6	;RP1=0, select bank0
   493  076C  1008               	bcf	8,0	;volatile
   494  076D                     l782:	
   495                           
   496                           ;Carreras.c: 81:             PORTDbits.RD1 = 0;
   497  076D  1088               	bcf	8,1	;volatile
   498  076E                     l784:	
   499                           
   500                           ;Carreras.c: 82:             PORTDbits.RD2 = 1;
   501  076E  1508               	bsf	8,2	;volatile
   502  076F                     l786:	
   503                           
   504                           ;Carreras.c: 83:             PORTC = SEGMENT_MAP [1];
   505  076F  3002               	movlw	low (((_SEGMENT_MAP+1)-__stringbase)| (0+32768))
   506  0770  0084               	movwf	4
   507  0771  120A  118A  2003  120A  118A  	fcall	stringdir
   508  0776  0087               	movwf	7	;volatile
   509  0777                     l788:	
   510                           
   511                           ;Carreras.c: 84:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   512  0777  3006               	movlw	6
   513  0778  00F7               	movwf	??_main+2
   514  0779  3013               	movlw	19
   515  077A  00F6               	movwf	??_main+1
   516  077B  30AD               	movlw	173
   517  077C  00F5               	movwf	??_main
   518  077D                     u237:	
   519  077D  0BF5               	decfsz	??_main,f
   520  077E  2F7D               	goto	u237
   521  077F  0BF6               	decfsz	??_main+1,f
   522  0780  2F7D               	goto	u237
   523  0781  0BF7               	decfsz	??_main+2,f
   524  0782  2F7D               	goto	u237
   525  0783  2F84               	nop2
   526  0784                     l790:	
   527                           
   528                           ;Carreras.c: 86:             PORTDbits.RD0 = 1;
   529  0784  1283               	bcf	3,5	;RP0=0, select bank0
   530  0785  1303               	bcf	3,6	;RP1=0, select bank0
   531  0786  1408               	bsf	8,0	;volatile
   532  0787                     l792:	
   533                           
   534                           ;Carreras.c: 87:             PORTDbits.RD1 = 1;
   535  0787  1488               	bsf	8,1	;volatile
   536  0788                     l794:	
   537                           
   538                           ;Carreras.c: 88:             PORTDbits.RD2 = 1;
   539  0788  1508               	bsf	8,2	;volatile
   540  0789                     l796:	
   541                           
   542                           ;Carreras.c: 89:             PORTC = SEGMENT_MAP [0];
   543  0789  3001               	movlw	low (_SEGMENT_MAP-__stringbase)
   544  078A  0084               	movwf	4
   545  078B  120A  118A  2003  120A  118A  	fcall	stringdir
   546  0790  0087               	movwf	7	;volatile
   547  0791                     l798:	
   548                           
   549                           ;Carreras.c: 90:             bandera = 1;
   550  0791  01F4               	clrf	_bandera
   551  0792  0AF4               	incf	_bandera,f
   552  0793  2FEE               	goto	l840
   553  0794                     l44:	
   554                           
   555                           ;Carreras.c: 94:             if (PORTDbits.RD6 == 1 && anti1 == 0) {
   556  0794  1F08               	btfss	8,6	;volatile
   557  0795  2F97               	goto	u121
   558  0796  2F98               	goto	u120
   559  0797                     u121:	
   560  0797  2FA3               	goto	l806
   561  0798                     u120:	
   562  0798                     l800:	
   563  0798  0871               	movf	_anti1,w
   564  0799  1D03               	btfss	3,2
   565  079A  2F9C               	goto	u131
   566  079B  2F9D               	goto	u130
   567  079C                     u131:	
   568  079C  2FA3               	goto	l806
   569  079D                     u130:	
   570  079D                     l802:	
   571                           
   572                           ;Carreras.c: 95:                 player1++;
   573  079D  3001               	movlw	1
   574  079E  00F5               	movwf	??_main
   575  079F  0875               	movf	??_main,w
   576  07A0  07F3               	addwf	_player1,f
   577  07A1                     l804:	
   578                           
   579                           ;Carreras.c: 96:                 anti1 = 1;
   580  07A1  01F1               	clrf	_anti1
   581  07A2  0AF1               	incf	_anti1,f
   582  07A3                     l806:	
   583                           
   584                           ;Carreras.c: 98:             if (PORTDbits.RD7 == 1 && anti2 == 0) {
   585  07A3  1F88               	btfss	8,7	;volatile
   586  07A4  2FA6               	goto	u141
   587  07A5  2FA7               	goto	u140
   588  07A6                     u141:	
   589  07A6  2FB2               	goto	l814
   590  07A7                     u140:	
   591  07A7                     l808:	
   592  07A7  0870               	movf	_anti2,w
   593  07A8  1D03               	btfss	3,2
   594  07A9  2FAB               	goto	u151
   595  07AA  2FAC               	goto	u150
   596  07AB                     u151:	
   597  07AB  2FB2               	goto	l814
   598  07AC                     u150:	
   599  07AC                     l810:	
   600                           
   601                           ;Carreras.c: 99:                 player2++;
   602  07AC  3001               	movlw	1
   603  07AD  00F5               	movwf	??_main
   604  07AE  0875               	movf	??_main,w
   605  07AF  07F2               	addwf	_player2,f
   606  07B0                     l812:	
   607                           
   608                           ;Carreras.c: 100:                 anti2 = 1;
   609  07B0  01F0               	clrf	_anti2
   610  07B1  0AF0               	incf	_anti2,f
   611  07B2                     l814:	
   612                           
   613                           ;Carreras.c: 103:             PORTA = COUNTER_MAP[player1];
   614  07B2  0873               	movf	_player1,w
   615  07B3  3E0B               	addlw	low ((_COUNTER_MAP-__stringbase)| (0+32768))
   616  07B4  0084               	movwf	4
   617  07B5  120A  118A  2003  120A  118A  	fcall	stringdir
   618  07BA  0085               	movwf	5	;volatile
   619  07BB                     l816:	
   620                           
   621                           ;Carreras.c: 104:             PORTB = COUNTER_MAP[player2];
   622  07BB  0872               	movf	_player2,w
   623  07BC  3E0B               	addlw	low ((_COUNTER_MAP-__stringbase)| (0+32768))
   624  07BD  0084               	movwf	4
   625  07BE  120A  118A  2003  120A  118A  	fcall	stringdir
   626  07C3  0086               	movwf	6	;volatile
   627                           
   628                           ;Carreras.c: 106:             if (player1 == 8) {
   629  07C4  3008               	movlw	8
   630  07C5  0673               	xorwf	_player1,w
   631  07C6  1D03               	btfss	3,2
   632  07C7  2FC9               	goto	u161
   633  07C8  2FCA               	goto	u160
   634  07C9                     u161:	
   635  07C9  2FD4               	goto	l824
   636  07CA                     u160:	
   637  07CA                     l818:	
   638                           
   639                           ;Carreras.c: 107:                 PORTC = SEGMENT_MAP[1];
   640  07CA  3002               	movlw	low (((_SEGMENT_MAP+1)-__stringbase)| (0+32768))
   641  07CB  0084               	movwf	4
   642  07CC  120A  118A  2003  120A  118A  	fcall	stringdir
   643  07D1  0087               	movwf	7	;volatile
   644  07D2                     l820:	
   645                           
   646                           ;Carreras.c: 108:                 PORTDbits.RD3 = 1;
   647  07D2  1588               	bsf	8,3	;volatile
   648  07D3                     l822:	
   649                           
   650                           ;Carreras.c: 109:                 bandera = 0;
   651  07D3  01F4               	clrf	_bandera
   652  07D4                     l824:	
   653                           
   654                           ;Carreras.c: 111:             if (player2 == 8) {
   655  07D4  3008               	movlw	8
   656  07D5  0672               	xorwf	_player2,w
   657  07D6  1D03               	btfss	3,2
   658  07D7  2FD9               	goto	u171
   659  07D8  2FDA               	goto	u170
   660  07D9                     u171:	
   661  07D9  2FE4               	goto	l832
   662  07DA                     u170:	
   663  07DA                     l826:	
   664                           
   665                           ;Carreras.c: 112:                 PORTC = SEGMENT_MAP[2];
   666  07DA  3003               	movlw	low (((_SEGMENT_MAP+2)-__stringbase)| (0+32768))
   667  07DB  0084               	movwf	4
   668  07DC  120A  118A  2003  120A  118A  	fcall	stringdir
   669  07E1  0087               	movwf	7	;volatile
   670  07E2                     l828:	
   671                           
   672                           ;Carreras.c: 113:                 PORTDbits.RD4 = 1;
   673  07E2  1608               	bsf	8,4	;volatile
   674  07E3                     l830:	
   675                           
   676                           ;Carreras.c: 114:                 bandera = 0;
   677  07E3  01F4               	clrf	_bandera
   678  07E4                     l832:	
   679                           
   680                           ;Carreras.c: 117:             if (PORTDbits.RD6 == 0) {
   681  07E4  1B08               	btfsc	8,6	;volatile
   682  07E5  2FE7               	goto	u181
   683  07E6  2FE8               	goto	u180
   684  07E7                     u181:	
   685  07E7  2FE9               	goto	l836
   686  07E8                     u180:	
   687  07E8                     l834:	
   688                           
   689                           ;Carreras.c: 118:                 anti1 = 0;
   690  07E8  01F1               	clrf	_anti1
   691  07E9                     l836:	
   692                           
   693                           ;Carreras.c: 120:             if (PORTDbits.RD7 == 0) {
   694  07E9  1B88               	btfsc	8,7	;volatile
   695  07EA  2FEC               	goto	u191
   696  07EB  2FED               	goto	u190
   697  07EC                     u191:	
   698  07EC  2FEE               	goto	l840
   699  07ED                     u190:	
   700  07ED                     l838:	
   701                           
   702                           ;Carreras.c: 121:                 anti2 = 0;
   703  07ED  01F0               	clrf	_anti2
   704  07EE                     l840:	
   705                           
   706                           ;Carreras.c: 92:         while (bandera == 1) {
   707  07EE  0374               	decf	_bandera,w
   708  07EF  1903               	btfsc	3,2
   709  07F0  2FF2               	goto	u201
   710  07F1  2FF3               	goto	u200
   711  07F2                     u201:	
   712  07F2  2F94               	goto	l44
   713  07F3                     u200:	
   714  07F3  2F2B               	goto	l752
   715  07F4  120A  118A  2800   	ljmp	start
   716  07F7                     __end_of_main:	
   717  007E                     btemp	set	126	;btemp
   718  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    19
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 28 21:25:39 2020

                       pc 0002               __CFG_CP$OFF 0000                        l44 0794  
                      fsr 0004                       l800 0798                       l810 07AC  
                     l802 079D                       l820 07D2                       l812 07B0  
                     l804 07A1                       l830 07E3                       l822 07D3  
                     l814 07B2                       l806 07A3                       l750 0724  
                     l832 07E4                       l824 07D4                       l816 07BB  
                     l808 07A7                       l760 0738                       l840 07EE  
                     l752 072B                       l744 071C                       l834 07E8  
                     l826 07DA                       l818 07CA                       l770 0750  
                     l762 0739                       l754 072F                       l746 0722  
                     l836 07E9                       l828 07E2                       l780 076A  
                     l772 0753                       l764 073A                       l756 0736  
                     l748 0723                       l838 07ED                       l790 0784  
                     l782 076D                       l774 0754                       l766 073B  
                     l758 0737                       l792 0787                       l784 076E  
                     l776 0755                       l768 0743                       l794 0788  
                     l786 076F                       l778 075D                       l796 0789  
                     l788 0777                       l798 0791                       u110 072F  
                     u111 072E                       u200 07F3                       u120 0798  
                     u201 07F2                       u121 0797                       u130 079D  
                     u131 079C                       u140 07A7                       u141 07A6  
                     u150 07AC                       u151 07AB                       u160 07CA  
                     u161 07C9                       u217 0749                       u170 07DA  
                     u171 07D9                       u227 0763                       u180 07E8  
                     u181 07E7                       u237 077D                       u190 07ED  
                     u191 07EC              __CFG_CPD$OFF 0000                       fsr0 0004  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 071C  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0075             __CFG_WDTE$OFF 0000                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000                     _anti1 0071  
                   _anti2 0070            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07F7              __end_of_main 07F7                    ??_main 0075  
          __CFG_PWRTE$OFF 0000   __end_of__initialization 07FC            __pcstackCOMMON 0075  
              __pmaintext 071C                __stringtab 0003                   _bandera 0074  
                 _player1 0073                   _player2 0072      end_of_initialization 07FC  
               _PORTDbits 0008                 _TRISDbits 0088       start_initialization 07F7  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_COUNTER_MAP 001C               __pbssCOMMON 0070  
               ___latbits 0002                 __pstrings 0003       __end_of_SEGMENT_MAP 0013  
             _COUNTER_MAP 0013               __stringbase 0008        __end_of__stringtab 0009  
             _SEGMENT_MAP 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 00DB  
               stringcode 0003                  stringdir 0003                  stringtab 0003  
